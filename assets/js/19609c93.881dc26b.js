"use strict";(self.webpackChunksnd_docs_ds=self.webpackChunksnd_docs_ds||[]).push([[220],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>g});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var d=a.createContext({}),p=function(e){var t=a.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=p(e.components);return a.createElement(d.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,d=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),c=p(n),m=r,g=c["".concat(d,".").concat(m)]||c[m]||u[m]||o;return n?a.createElement(g,i(i({ref:t},s),{},{components:n})):a.createElement(g,i({ref:t},s))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=m;var l={};for(var d in t)hasOwnProperty.call(t,d)&&(l[d]=t[d]);l.originalType=e,l[c]="string"==typeof e?e:r,i[1]=l;for(var p=2;p<o;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},1353:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var a=n(7462),r=(n(7294),n(3905));const o={},i="API Routes",l={unversionedId:"advanced/api",id:"advanced/api",title:"API Routes",description:"Sales & Dungeons exposes a few API routes that can be used to fetch data and trigger printing from external applications.",source:"@site/docs/advanced/api.md",sourceDirName:"advanced",slug:"/advanced/api",permalink:"/docs/advanced/api",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/advanced/api.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Advanced",permalink:"/docs/advanced/"},next:{title:"Building",permalink:"/docs/advanced/building"}},d={},p=[{value:"<code>(GET) /api/extern/templates</code>",id:"get-apiexterntemplates",level:2},{value:"Example",id:"example",level:3},{value:"<code>(GET) /api/extern/generators</code>",id:"get-apiexterngenerators",level:2},{value:"Example",id:"example-1",level:3},{value:"<code>(POST) /api/extern/print/:id</code>",id:"post-apiexternprintid",level:2},{value:"Template",id:"template",level:3},{value:"Generator",id:"generator",level:3},{value:"<code>(POST) /api/extern/print_raw</code>",id:"post-apiexternprint_raw",level:2}],s={toc:p},c="wrapper";function u(e){let{components:t,...n}=e;return(0,r.kt)(c,(0,a.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"api-routes"},"API Routes"),(0,r.kt)("p",null,"Sales & Dungeons exposes a few API routes that can be used to fetch data and trigger printing from external applications."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"If S&D wasn't modified the API is accessible under ",(0,r.kt)("inlineCode",{parentName:"li"},"http://127.0.0.1:7123/"),"."),(0,r.kt)("li",{parentName:"ul"},"All data is JSON encoded.")),(0,r.kt)("h2",{id:"get-apiexterntemplates"},(0,r.kt)("inlineCode",{parentName:"h2"},"(GET) /api/extern/templates")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Returns a list of all templates stored in S&D")),(0,r.kt)("h3",{id:"example"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'[\n   {\n      "id":"tmpl:Author+slug",\n      "name":"Cool Template",\n      "author":"Author",\n      "slug":"slug",\n      "description":"..."\n   }\n]\n')),(0,r.kt)("h2",{id:"get-apiexterngenerators"},(0,r.kt)("inlineCode",{parentName:"h2"},"(GET) /api/extern/generators")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Returns a list of all generators stored in S&D")),(0,r.kt)("h3",{id:"example-1"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'[\n   {\n      "id":"gen:BigJk+dungeon-generator",\n      "name":"Dungeon Generator",\n      "author":"BigJk",\n      "slug":"dungeon-generator",\n      "description":"This randomly generates a dungeon with some basic description. How you use the door and loot descriptions is up to you. The descriptions are based on the \\"AX1: Old School Adventure Accessories - D30 DM Companion\\" by Richard J. LeBlanc, Jr.",\n      "config":[\n         {\n            "key":"type",\n            "name":"Algorithm Type",\n            "description":"Which algorithm to use for generation.",\n            "type":"Options",\n            "default":{\n               "choices":[\n                  "Uniform",\n                  "Digger",\n                  "Rogue"\n               ],\n               "selected":"Uniform"\n            }\n         },\n         {\n            "key":"doors",\n            "name":"Add Doors",\n            "description":"Add description of doors and if they are locked.",\n            "type":"Checkbox",\n            "default":true\n         },\n         {\n            "key":"container",\n            "name":"Add Loot Container",\n            "description":"Adds some loot containers.",\n            "type":"Checkbox",\n            "default":true\n         },\n         {\n            "key":"container_chance",\n            "name":"Loot Container Chance",\n            "description":"Percentage (0 - 100%) chance of a loot container present in a room.",\n            "type":"Number",\n            "default":10\n         }\n      ]\n   }\n]\n')),(0,r.kt)("h2",{id:"post-apiexternprintid"},(0,r.kt)("inlineCode",{parentName:"h2"},"(POST) /api/extern/print/:id")),(0,r.kt)("h3",{id:"template"},"Template"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"POST body should be a JSON encoded object containing the entry data"),(0,r.kt)("li",{parentName:"ul"},"You can check the info button (top right) on any template to get the id"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},":id")," should be the template id (e.g. ",(0,r.kt)("inlineCode",{parentName:"li"},"tmpl:Author+slug"),")")),(0,r.kt)("h3",{id:"generator"},"Generator"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"POST body should be a JSON encoded object containing the generator config"),(0,r.kt)("li",{parentName:"ul"},"You can check the info button on any generator to get the id and the current config as JSON"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},":id")," should be the template id (e.g. ",(0,r.kt)("inlineCode",{parentName:"li"},"gen:Author+slug"),")")),(0,r.kt)("h2",{id:"post-apiexternprint_raw"},(0,r.kt)("inlineCode",{parentName:"h2"},"(POST) /api/extern/print_raw")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"POST body should contain ESC/POS commands as bytes"),(0,r.kt)("li",{parentName:"ul"},"Commands will be sent to the configured printer"),(0,r.kt)("li",{parentName:"ul"},"This is used by the ",(0,r.kt)("inlineCode",{parentName:"li"},"Remote S&D Printing")," to send prints to different S&D instances")))}u.isMDXComponent=!0}}]);