"use strict";(self.webpackChunksnd_docs_ds=self.webpackChunksnd_docs_ds||[]).push([[490],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),u=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(l.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),p=u(n),m=a,f=p["".concat(l,".").concat(m)]||p[m]||d[m]||o;return n?r.createElement(f,s(s({ref:t},c),{},{components:n})):r.createElement(f,s({ref:t},c))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,s=new Array(o);s[0]=m;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[p]="string"==typeof e?e:a,s[1]=i;for(var u=2;u<o;u++)s[u]=n[u];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},3253:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>u});var r=n(7462),a=(n(7294),n(3905));const o={sidebar_position:5},s="Data Sources",i={unversionedId:"data-source/index",id:"data-source/index",title:"Data Sources",description:"Data Sources are collections of data that can be linked to Templates and Generators. For example a Data Source could contain monsters from Dungeons & Dragons 5e, so that the monsters can be used in a Template.",source:"@site/docs/data-source/index.md",sourceDirName:"data-source",slug:"/data-source/",permalink:"/docs/data-source/",draft:!1,editUrl:"https://github.com/BigJk/snd-docs/blob/main/docs/data-source/index.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"FAQ",permalink:"/docs/faq"},next:{title:"Fight Club 5e XML Format",permalink:"/docs/data-source/5e-xml"}},l={},u=[{value:"Format",id:"format",level:2},{value:"meta.json",id:"metajson",level:3},{value:"entries.json",id:"entriesjson",level:3},{value:"Import",id:"import",level:2}],c={toc:u},p="wrapper";function d(e){let{components:t,...n}=e;return(0,a.kt)(p,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"data-sources"},"Data Sources"),(0,a.kt)("p",null,"Data Sources are collections of data that can be linked to Templates and Generators. For example a Data Source could contain monsters from Dungeons & Dragons 5e, so that the monsters can be used in a Template."),(0,a.kt)("h2",{id:"format"},"Format"),(0,a.kt)("p",null,"Data Sources consist out of two very simple .json files:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"meta.json"),(0,a.kt)("li",{parentName:"ul"},"entries.json")),(0,a.kt)("p",null,"You can import folders or zip files containing these files into Sales & Dungeons."),(0,a.kt)("h3",{id:"metajson"},"meta.json"),(0,a.kt)("p",null,"Just the basic infos"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "name": "Open5e Weapons",\n  "slug": "open5e-weapons",\n  "author": "BigJk",\n  "description": "Imported weapon data from Open5e"\n}\n')),(0,a.kt)("h3",{id:"entriesjson"},"entries.json"),(0,a.kt)("p",null,"You entries as a array. Objects need a unique ",(0,a.kt)("inlineCode",{parentName:"p"},"id"),", some ",(0,a.kt)("inlineCode",{parentName:"p"},"name")," and then the ",(0,a.kt)("inlineCode",{parentName:"p"},"data")," object with whatever data it should hold. Fairly plain."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'[\n  {\n    "id": "open5e/club",\n    "name": "Club",\n    "data": {\n      // YOUR DATA HERE\n      "description": "A simple ...",\n      "cost": "1 sp"\n    }\n  },\n  {\n    "id": "open5e/dagger",\n    "name": "Dagger",\n    "data": {\n      // YOUR DATA HERE\n    }\n  }\n]\n')),(0,a.kt)("h2",{id:"import"},"Import"),(0,a.kt)("p",null,"Sales & Dungeons supports additional import formats. Currently supported are:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"CSV"),": Tabular data"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Fight Club 5e XML"),": Data from the Fight Club 5e xml files"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"FoundryVTT"),": Data from FoundryVTT modules"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"5e.tools"),": JSON data from 5e.tools")))}d.isMDXComponent=!0}}]);