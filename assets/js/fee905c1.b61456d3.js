"use strict";(self.webpackChunksnd_docs_ds=self.webpackChunksnd_docs_ds||[]).push([[368],{3905:(e,t,a)=>{a.d(t,{Zo:()=>m,kt:()=>h});var n=a(7294);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function r(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var s=n.createContext({}),p=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):r(r({},t),e)),a},m=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var a=e.components,i=e.mdxType,l=e.originalType,s=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),u=p(a),c=i,h=u["".concat(s,".").concat(c)]||u[c]||d[c]||l;return a?n.createElement(h,r(r({ref:t},m),{},{components:a})):n.createElement(h,r({ref:t},m))}));function h(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var l=a.length,r=new Array(l);r[0]=c;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[u]="string"==typeof e?e:i,r[1]=o;for(var p=2;p<l;p++)r[p]=a[p];return n.createElement.apply(null,r)}return n.createElement.apply(null,a)}c.displayName="MDXCreateElement"},6399:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>r,default:()=>d,frontMatter:()=>l,metadata:()=>o,toc:()=>p});var n=a(7462),i=(a(7294),a(3905));const l={sidebar_position:1},r="Template",o={unversionedId:"templating/template",id:"templating/template",title:"Template",description:"A template defines the look of a print-out and contains entries that can be printed.",source:"@site/docs/templating/template.md",sourceDirName:"templating",slug:"/templating/template",permalink:"/docs/templating/template",draft:!1,editUrl:"https://github.com/BigJk/snd-docs/blob/main/docs/templating/template.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Templating",permalink:"/docs/templating/"},next:{title:"AI Features",permalink:"/docs/templating/ai"}},s={},p=[{value:"Video guide",id:"video-guide",level:2},{value:"Learning",id:"learning",level:2},{value:"Information",id:"information",level:2},{value:"Author &amp; Slug",id:"author--slug",level:3},{value:"Images",id:"images",level:2},{value:"Example",id:"example",level:3},{value:"Sources",id:"sources",level:2},{value:"Skeleton Data",id:"skeleton-data",level:2},{value:"\u2014 Type: Text",id:"-type-text",level:3},{value:"\u2014 Type: Number",id:"-type-number",level:3},{value:"\u2014 Type: List",id:"-type-list",level:3},{value:"\u2014 Type: Image",id:"-type-image",level:3},{value:"Full Example",id:"full-example",level:3},{value:"Merge Utilities",id:"merge-utilities",level:3},{value:"Templates",id:"templates",level:2},{value:"Variables",id:"variables",level:2},{value:"Additional Variables",id:"additional-variables",level:2},{value:"Printer Settings",id:"printer-settings",level:3},{value:"Images",id:"images-1",level:3}],m={toc:p},u="wrapper";function d(e){let{components:t,...a}=e;return(0,i.kt)(u,(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"template"},"Template"),(0,i.kt)("p",null,"A template defines the look of a print-out and contains entries that can be printed.\nTemplates are 'designed' in HTML and CSS and the data is inserted via a templating\nengine called ",(0,i.kt)("a",{parentName:"p",href:"https://mozilla.github.io/nunjucks/"},"Nunjuks"),"."),(0,i.kt)("p",null,"Using HTML and CSS makes it possible to use all the nice and convenient layout and style\noptions that they have to offer and even include any common framework you might need\n(e.g. Fontawesome for Icons). This can greatly speedup the template creation process."),(0,i.kt)("h2",{id:"video-guide"},"Video guide"),(0,i.kt)("iframe",{width:"100%",style:{"aspect-ratio":"16 / 9"},src:"https://www.youtube.com/embed/3ny4qo40DQU?si=c9_eOfCpDzG19a45",title:"YouTube video player",frameborder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share",referrerpolicy:"strict-origin-when-cross-origin",allowfullscreen:!0}),(0,i.kt)("h2",{id:"learning"},"Learning"),(0,i.kt)("p",null,"If you are new to HTML, CSS and the likes a good starting point might be:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"HTML: ",(0,i.kt)("a",{parentName:"li",href:"https://www.w3schools.com/html/html_intro.asp"},"HTML Introduction")),(0,i.kt)("li",{parentName:"ul"},"CSS: ",(0,i.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Learn/CSS/First_steps/Getting_started"},"Getting started with CSS")),(0,i.kt)("li",{parentName:"ul"},"Nunjucks: ",(0,i.kt)("a",{parentName:"li",href:"https://mozilla.github.io/nunjucks/templating.html"},"Templating"))),(0,i.kt)("p",null,"In the following section a brief introduction to the tabs found in the template\ncreation will be given:"),(0,i.kt)("h2",{id:"information"},"Information"),(0,i.kt)("p",null,"Here basic information for the template, like a name and description that will be shown in\nthe template list are set."),(0,i.kt)("h3",{id:"author--slug"},"Author & Slug"),(0,i.kt)("p",null,"It's important to know that templates will be identified by author and slug. Both are allowed\nto contain alphanumeric (",(0,i.kt)("inlineCode",{parentName:"p"},"a-z A-Z 0-9"),") and the ",(0,i.kt)("inlineCode",{parentName:"p"},"-")," character. You can think about the slug as a simplified\nname that is used for identification instead of looking nice to display."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Example:")," If you want a template containing Magic Items you might set the name to ",(0,i.kt)("inlineCode",{parentName:"p"},"Magic Items"),",\nthe Author to ",(0,i.kt)("inlineCode",{parentName:"p"},"YourUsername")," and the slug to ",(0,i.kt)("inlineCode",{parentName:"p"},"magic-items"),"."),(0,i.kt)("p",null,"With the help of author and slug it is easier to share templates and update them when importing."),(0,i.kt)("h2",{id:"images"},"Images"),(0,i.kt)("p",null,"It is possible to attach images to a template. Imagine you want to add a border to your template.\nHere is the right place to add these images. If you added an image it is possible to access it\nin a template via the ",(0,i.kt)("inlineCode",{parentName:"p"},"images")," variable."),(0,i.kt)("h3",{id:"example"},"Example"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-html"},'<img src="{{ images[\'your_image.png\'] }}" alt="" />\n')),(0,i.kt)("h2",{id:"sources"},"Sources"),(0,i.kt)("p",null,"Data sources are collection of entries (data) that can be linked to templates.\nAn example would be a list of Monsters or Magic Items. Any data source that you want to link\nto this template can be selected here."),(0,i.kt)("h2",{id:"skeleton-data"},"Skeleton Data"),(0,i.kt)("p",null,"The skeleton data is like an example entry that is used for template editing and entry creation.\nIt is encoded as ",(0,i.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/JSON"},"json"),". Depending on the type and value of a\nproperty a different input will be shown in the entry creation and editing."),(0,i.kt)("h3",{id:"-type-text"},"\u2014 Type: Text"),(0,i.kt)("p",null,"If a property is a text like the ",(0,i.kt)("inlineCode",{parentName:"p"},"description")," in the following example a normal text input\nwill be shown."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "description": "Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam"\n}\n')),(0,i.kt)("h3",{id:"-type-number"},"\u2014 Type: Number"),(0,i.kt)("p",null,"If a property is a number like the ",(0,i.kt)("inlineCode",{parentName:"p"},"hp")," in the following example a number input will be shown."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "hp": 120\n}\n')),(0,i.kt)("h3",{id:"-type-list"},"\u2014 Type: List"),(0,i.kt)("p",null,"If a property is a list (array) like the ",(0,i.kt)("inlineCode",{parentName:"p"},"attacks")," in the following example it will be possible\nto create and remove list items with editable ",(0,i.kt)("inlineCode",{parentName:"p"},"name")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"damage")," values."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "attacks": [\n    {\n      "name": "Bite",\n      "damage": 20\n    }\n  ]\n}\n')),(0,i.kt)("p",null,"List of basic types will also work."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "attacks": ["Bite", "Slash"]\n}\n')),(0,i.kt)("h3",{id:"-type-image"},"\u2014 Type: Image"),(0,i.kt)("p",null,"If any text property contains the text ",(0,i.kt)("inlineCode",{parentName:"p"},"!IMAGE")," like the ",(0,i.kt)("inlineCode",{parentName:"p"},"icon")," property in the following\nexample a image input will be shown."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "icon": "!IMAGE"\n}\n')),(0,i.kt)("p",null,"To use it as an image in your template:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-html"},'<img src="{{ it.icon }}" alt="" />\n')),(0,i.kt)("h3",{id:"full-example"},"Full Example"),(0,i.kt)("p",null,"A skeleton for a weapon could be the following:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "category": "Martial Melee Weapons",\n  "cost": "10 gp",\n  "damage_dice": "1d8",\n  "damage_type": "slashing",\n  "name": "Battleaxe",\n  "properties": ["versatile (1d10)"],\n  "weight": "4 lb."\n}\n')),(0,i.kt)("h3",{id:"merge-utilities"},"Merge Utilities"),(0,i.kt)("p",null,"If you edit a template and the template has data sources attached to them, you can use the merge\nutilities to quickly generate a skeleton data. Let's imagine you imported a data source containing\nmonsters and don't want to define the skeleton yourself. You can just use the ",(0,i.kt)("strong",{parentName:"p"},"Merge All")," button\nand Sales & Dungeons will try to produce an optimal skeleton data from the entries, so you can focus\non building a cool template!"),(0,i.kt)("h2",{id:"templates"},"Templates"),(0,i.kt)("p",null,"A template contains two nunjucks templates. One that defines how the print-out should look, which is\ncalled the ",(0,i.kt)("strong",{parentName:"p"},"Print Template")," and one called ",(0,i.kt)("strong",{parentName:"p"},"List Template")," that defines additional information that should\nbe shown under each entry in the template entry list."),(0,i.kt)("p",null,"See ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/BigJk/snd/wiki/Nunjucks-Filter-&-Extensions"},"Nunjucks Filter & Extension")," for more info on additional filters and extensions available in Sales & Dungeons."),(0,i.kt)("h2",{id:"variables"},"Variables"),(0,i.kt)("p",null,"You will be able to access the data of the data skeleton or the selected entry in the template.\nTo access the data by using the nunjucks variable syntax. Let's imagine you have the following\ndata skeleton or selected entry data:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "name": "Cool Name"\n}\n')),(0,i.kt)("p",null,"To access the name property in the nunjucks html template you just need to write"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-html"},"<span>Name: {{ it.name }}</span>\n")),(0,i.kt)("h2",{id:"additional-variables"},"Additional Variables"),(0,i.kt)("h3",{id:"printer-settings"},"Printer Settings"),(0,i.kt)("p",null,"The printer settings you set are also available in the template under the ",(0,i.kt)("inlineCode",{parentName:"p"},"settings")," variable.\nUsing the ",(0,i.kt)("inlineCode",{parentName:"p"},"settings.printerWidth")," setting is especially useful to change your design depending\non the size of the printer. Most printer will either have a 58mm or 80mm print area, so it's wise\nto adopt your template to both sizes."),(0,i.kt)("h3",{id:"images-1"},"Images"),(0,i.kt)("p",null,"Any image that you saved inside your template will be available under the ",(0,i.kt)("inlineCode",{parentName:"p"},"images")," variable."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-html"},'<img src="{{ images[\'your_image.png\'] }}" alt="" />\n')))}d.isMDXComponent=!0}}]);